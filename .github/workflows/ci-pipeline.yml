name: CI pipeline

# 1. format
# 2. lint
# 3. dependency review
# 4. sonar
# 6. gitguardian
# 5. codeql


on:
#     push:
#        branches: [ "main", "dev" ]
#     pull_request:
#         types: [opened, synchronize, reopened]
#         branches: [ "dev" ]

    workflow_dispatch:

jobs:
    format_and_lint:
        name: Format and Lint
        
        runs-on: ubuntu-latest
        
        steps:
            -   name: Checkout branch
                uses: actions/checkout@v3
                with:
                    # Full git history is needed to get a proper
                    # list of changed files within `super-linter`
                    fetch-depth: 0
                    
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    java-version: '17'
                    distribution: 'temurin'
                    cache: maven
                    
            -   name: Format (java)
#                 run: mvn process-resources --file pom.xml
                run: |
                    mvn impsort:sort
                    mvn formatter:format

            -   name: Lint (java)
                uses: github/super-linter@v4
                env:
                    VALIDATE_ALL_CODEBASE: false
                    VALIDATE_GOOGLE_JAVA_FORMAT: true
                    DEFAULT_BRANCH: main
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    
    vulnerability_check:
        name: Vulnerability check
        
        runs-on: ubuntu-latest
        
        permissions:
            actions: read
            contents: read
            security-events: write

        strategy:
            fail-fast: false
            matrix:
                language: [ 'java' ]
        
        steps:
            -   name: Checkout branch
                uses: actions/checkout@v3
                with:
                    # Full git history is needed to get a proper
                    # list of changed files within `super-linter`
                    fetch-depth: 0
       
            -   name: Dependency review
                uses: actions/dependency-review-action@v2
                with:
                    base-ref: main
                    head-ref: main
                    
                    
                    
            # Initializes the CodeQL tools for scanning.
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v2
              with:
                  languages: ${{ matrix.language }}
                  # If you wish to specify custom queries, you can do so here or in a config file.
                  # By default, queries listed here will override any specified in a config file.
                  # Prefix the list here with "+" to use these queries and those in the config file.

                  # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
                  # queries: security-extended,security-and-quality


            # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
            # If this step fails, then you should remove it and run the build manually (see below)
#             - name: Autobuild
#               uses: github/codeql-action/autobuild@v2
#           Manual build start   
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    java-version: '17'
                    distribution: 'temurin'
                    cache: maven
                    
            -   name: Build
                run: mvn clean compile --file pom.xml
#           Manual build end

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v2
              with:
                  category: "/language:${{matrix.language}}"
          
    build:
        name: Build
        
        runs-on: ubuntu-latest
        
        needs: [format_and_lint, vulnerability_check]

        steps:
            -   name: Checkout branch
                uses: actions/checkout@v3

            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    java-version: '17'
                    distribution: 'temurin'
                    cache: maven
                    
            -   name: Maven package
                run: mvn package --file pom.xml
